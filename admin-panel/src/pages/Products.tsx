
import React, { useEffect, useState } from 'react';

declare global {
  interface Window {
    Telegram: any;
  }
}

type Product = {
  id: number;
  name: string;
  price: number;
};

const Products: React.FC = () => {
  const [user, setUser] = useState<{ id: number; first_name: string } | null>(null);
  const [tab, setTab] = useState<'products' | 'cart' | 'orders'>('products');
  const [products, setProducts] = useState<Product[]>([]);
  const [cart, setCart] = useState<Product[]>([]);

  useEffect(() => {
    const tg = window.Telegram.WebApp;
    tg.ready?.();
    const userData = tg?.initDataUnsafe?.user;

    if (userData) {
      setUser(userData);

      // –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ –±–µ–∫–µ–Ω–¥
      fetch("http://localhost:3000/api/users", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          telegramId: userData.id,
          firstName: userData.first_name
        })
      });

      // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤
      fetch("http://localhost:3000/api/products")
        .then(res => res.json())
        .then(data => setProducts(data));
    }
  }, []);

  const addToCart = (product: Product) => {
    setCart([...cart, product]);
  };

  return (
    <div>
      <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>
        <button onClick={() => setTab('products')}>üì¶ –¢–æ–≤–∞—Ä–∏</button>
        <button onClick={() => setTab('cart')}>üõí –ö–æ—à–∏–∫ ({cart.length})</button>
        <button onClick={() => setTab('orders')}>‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</button>
      </div>

      {tab === 'products' && (
        <div>
          <h3>–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤:</h3>
          {products.map(p => (
            <div key={p.id} style={{ border: '1px solid #ccc', marginBottom: '8px', padding: '8px' }}>
              <div>{p.name}</div>
              <div>–¶—ñ–Ω–∞: {p.price} ‚Ç¥</div>
              <button onClick={() => addToCart(p)}>–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button>
            </div>
          ))}
        </div>
      )}

      {tab === 'cart' && (
        <div>
          <h3>–ö–æ—à–∏–∫:</h3>
          {cart.length === 0 ? (
            <p>–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</p>
          ) : (
            cart.map((p, i) => (
              <div key={i}>
                {p.name} ‚Äî {p.price} ‚Ç¥
              </div>
            ))
          )}
        </div>
      )}

      {tab === 'orders' && (
        <div>
          <h3>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è (—Ç–∏–º—á–∞—Å–æ–≤–æ –ø–æ—Ä–æ–∂–Ω—å–æ)</h3>
        </div>
      )}
    </div>
  );
};

export default Products;
